upstream lightingclub {
  server unix:<%= node['lightingclub']['app_path']+node['lightingclub']['unicorn_conf']['sock']%> ;
}

server {
    # if you're running multiple servers, instead of "default" you should
    # put your main domain name here
    listen <%= node['lightingclub']['nginx_listen'] %>;
 
    # you could put a list of other domain names this application answers
    server_name <%= node['lightingclub']['app_server_name'] %>;
 
    root <%= node['lightingclub']['app_path']%>/public;
    access_log /var/log/nginx/<%= node['lightingclub']['app_server_name'] %>_access.log;
    rewrite_log on;

    # enable ssl
    listen 443 ssl;

    ssl_certificate /etc/ssl/thelightingclub.be.crt;
    ssl_certificate_key /etc/ssl/thelightingclub.be.key;
 
    location / {
        #all requests are sent to the UNIX socket
        proxy_pass  http://lightingclub;
        proxy_redirect     off;
 
        proxy_set_header   Host               $host;
        proxy_set_header   X-Real-IP          $remote_addr;
        proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto  $scheme;
 
        client_max_body_size       10m;
        client_body_buffer_size    128k;
 
        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;
 
        proxy_buffer_size          4k;
        proxy_buffers              4 32k;
        proxy_busy_buffers_size    64k;
        proxy_temp_file_write_size 64k;
    }
 
    # if the request is for a static resource, nginx should serve it directly
    # and add a far future expires header to it, making the browser
    # cache the resource and navigate faster over the website
    # this probably needs some work with Rails 3.1's asset pipeline
    location ~ ^/(system|assets|spree)/  {
      root <%= node['lightingclub']['app_path']%>/public;
      expires max;
      break;
    }
}